#!/bin/bash

export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
DOMAINS=/etc/ssl_domains.txt
MYROOT=/var/lib/ssllabs

which ssllabs-scan >/dev/null || { echo download ssllabs-scan ; exit ; }

function scan() {

mkdir -p $MYROOT

for DOMAIN in $( cat  /etc/ssl_domains.txt | grep -Ev '(^$|^#)' )
do
        echo ==$DOMAIN

        local GRADE=$(get_grade $MYROOT/$DOMAIN.raw)
        if echo ${BASH_ARGV[*]}  | grep -P "failed_grades" -q && [ "$GRADE" == "A" ]
        then
            echo "skip because grade is $GRADE"
        else  
            timeout 300 \
                ssllabs-scan -usecache  -maxage 1 -quiet -hostcheck  -verbosity error $DOMAIN > $MYROOT/$DOMAIN.raw.tmp
            mv  $MYROOT/$DOMAIN.raw.tmp $MYROOT/$DOMAIN.raw
            get_grade $MYROOT/$DOMAIN.raw 
        fi
done

}
####################

#function get_grade () {
    #cat $1 2>/dev/null | grep '"grade"' | cut -d: -f2 | cut -d\" -f2 
#}

function get_grade () {
        local RAW=$1
        local LGRADE=$(    cat $RAW 2>/dev/null | grep '"grade"' | cut -d: -f2 | cut -d\" -f2 | head -n1 )
        test -n "$LGRADE" && echo $LGRADE || echo NULL
}


####################
function check() {

STATUS=0

for DOMAIN in $( cat  /etc/ssl_domains.txt | grep -Ev '(^$|^#)' )
do
    if find $MYROOT/$DOMAIN.raw -cmin -720 2>/dev/null | grep -q . 
    then    GRADE=$( get_grade $MYROOT/$DOMAIN.raw ) 
            HOURS=$(((`date +%s`-`stat -c %Y $MYROOT/$DOMAIN.raw`)/3600 )) ; 
            TXT+="grade $GRADE, checked $HOURS h ago, $DOMAIN;\n"
            echo "$GRADE" | grep -q -e "^A" || STATUS=1
    else    TXT+=" $DOMAIN not found or old status;\n"
            STATUS=1
    fi
done

echo "SSLLABS: "$( [ $STATUS == 0 ] && echo OK || echo WARN ): 
echo -e "$TXT"|sort -k3 -r
exit $STATUS
}

################# 

if      [ "scan"  == "$1" ] ; then $1
elif    [ "check" == "$1" ] ; then $1
else    echo "use 
        $0 scan [failed_grades]
        $0 check
"

fi


