#!/bin/bash

export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
export DOMAINS=/etc/ssl_domains.txt
export MYROOT=/var/lib/ssllabs
export PARALLEL=10
mkdir -p $MYROOT

which ssllabs-scan >/dev/null || { echo download ssllabs-scan ; exit 2 ; }

#function scan() {
#
#for DOMAIN in $( cat  /etc/ssl_domains.txt | grep -Ev '(^$|^#)' )
#do
#        echo ==$DOMAIN
#        timeout 300 \
#            ssllabs-scan -usecache  -maxage 1 -quiet -hostcheck  -verbosity error $DOMAIN > $MYROOT/$DOMAIN.raw.tmp
#        mv  $MYROOT/$DOMAIN.raw.tmp $MYROOT/$DOMAIN.raw
#        get_grade $MYROOT/$DOMAIN.raw 
#done
#
#}

function scan_parallel() {

cat  /etc/ssl_domains.txt | grep -Ev '(^$|^#)' | xargs -P$PARALLEL -n1 -ID -- bash -c "scan_domain D" 

}

function scan_domain() {

local DOMAIN=$1
local GRADE=""
local SCANCMD="timeout 300 ssllabs-scan -usecache  -maxage 1 -quiet -hostcheck  -verbosity error $DOMAIN"
# no cache:
local SCANCMD2="timeout 300 ssllabs-scan                     -quiet -hostcheck  -verbosity error $DOMAIN"

        echo "==start scan $DOMAIN : $SCANCMD : $MYROOT/$DOMAIN.raw.tmp "

        $SCANCMD > $MYROOT/$DOMAIN.raw.tmp
        GRADE=$( get_grade $MYROOT/$DOMAIN.raw.tmp )

        if [ "$GRADE" == NULL ]
        then    echo "== $DOMAIN scan failed; got $GRADE ; 2nd attempt; $SCANCMD2"
                $SCANCMD2 > $MYROOT/$DOMAIN.raw.tmp
                GRADE=$( get_grade $MYROOT/$DOMAIN.raw.tmp )
                echo "==$DOMAIN got $GRADE on 2nd scan" 
        fi
        
        mv  $MYROOT/$DOMAIN.raw.tmp $MYROOT/$DOMAIN.raw
        echo ==end scan $DOMAIN grade $GRADE
}

export -f scan_domain

####################

function get_grade () {
        local RAW=$1
        local LGRADE=$(    cat $RAW 2>/dev/null | grep '"grade"' | cut -d: -f2 | cut -d\" -f2 | head -n1 )
        test -n "$LGRADE" && echo $LGRADE || echo NULL
}

export -f get_grade

####################
function check() {

STATUS=0

for DOMAIN in $( cat  /etc/ssl_domains.txt | grep -Ev '(^$|^#)' )
do
    if find $MYROOT/$DOMAIN.raw -cmin -720 2>/dev/null | grep -q . 
    then    GRADE=$( get_grade $MYROOT/$DOMAIN.raw ) 
            HOURS=$(((`date +%s`-`stat -c %Y $MYROOT/$DOMAIN.raw`)/3600 )) ; 
            TXT+=" $DOMAIN grade $GRADE, checked $HOURS h ago;"
            echo "$GRADE" | grep -q -e "^A" || STATUS=1
    else    TXT+=" $DOMAIN not found or old status;"
            STATUS=1
    fi
done

echo "SSLLABS: "$( [ $STATUS == 0 ] && echo OK || echo WARN )": $TXT"
exit $STATUS
}

################# 

if      [ "scan"  == "$1" ] ; then scan_parallel
elif    [ "check" == "$1" ] ; then check
else    echo "use scan or check"
fi


